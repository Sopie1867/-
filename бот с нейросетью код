import telebot
import requests
token = "6904531604:AAH73yyuTtC6PkvRyXIr5HKxzvjKvDkWPYo"
bot = telebot.TeleBot(token)
GPT_LOCAL_URL = "http://localhost:1234/v1/chat/completions"
HEADERS = {"Content-Type": "application/json"}
MAX_TOKENS = 150

users_history = {}

@bot.message_handler(commands=['start'])
def start_command(message):
      user_name = message.from_user.first_name
      bot.send_message(message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {user_name}! –Ø —Ç–≤–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫üòâ. –ù–∞–∂–º–∏ /help")


def filter_hello(message):
      word = "–ø—Ä–∏–≤–µ—Ç"
      return word in message.text.lower()

@bot.message_handler(content_types=['text'], func=filter_hello)
def say_hello(message):
        user_name = message.from_user.first_name
        bot.send_message(message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç, {user_name})")



def filter_bye(message):
    word = "–ø–æ–∫–∞"
    return word in message.text.lower()


@bot.message_handler(content_types=['text'], func=filter_bye)
def say_bye(message):
    user_name = message.from_user.first_name
    bot.send_message(message.chat.id, text=f"–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, {user_name})")


def filter_howareyou(message):
      word = "–∫–∞–∫ –¥–µ–ª–∞?"
      return word in message.text.lower()

@bot.message_handler(content_types=['text'], func=filter_howareyou)
def say_howareyou(message):
        bot.send_message(message.chat.id, text="–£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ. –ù–∞–¥–µ—é—Å—å —É —Ç–µ–±—è —Ç–æ–∂–µ)")


@bot.message_handler(commands=['help'])
def help_command(message):
        bot.send_message(message.chat.id, text="–∫–æ–º–∞–Ω–¥—ã: /start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"
                                                    "    /help - –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥"
                                                    "    /about - –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±–æ—Ç–æ–º"
                                                    "    /solve_task - –ò–ò –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å")

@bot.message_handler(commands=['about'])
def about_command(message):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç! –Ø –î–µ—Ñ–æ –º–ª–∞–¥—à–∏–π - —Ç–≤–æ–π –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ, –∞ –≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –∏ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—É–≥–∞.")

@bot.message_handler(commands=['solve_task'])
def solve_task(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —É—Å–ª–æ–≤–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏, –Ω–∞–ø–∏—Å–∞–≤ –ø–µ—Ä–µ–¥ —Å–∞–º–æ–π –∑–∞–¥–∞—á–µ–π: ¬´–Ω–∞–ø–∏—à–∏ –ø–æ-—Ä—É—Å—Å–∫–∏¬ª, –∞ –¥–∞–ª—å—à–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ (–ò–ò –∞–Ω–≥–ª–∏—á–∞–Ω–∫–∞)")
    bot.register_next_step_handler(message, get_promt)


  

def get_promt(message):
    user_id = message.from_user.id
    bot.send_message(message.chat.id, text="–ü—Ä–æ–º—Ç –ø—Ä–∏–Ω—è—Ç!")
    if message.content_type != "text":
        bot.send_message(user_id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        bot.register_next_step_handler(message, get_promt)
        return
    user_request = message.text
    if user_id not in users_history or users_history[user_id] == {}:
        resp = requests.post(
        'http://localhost:1234/v1/chat/completions',
            headers={"Content-Type": "application/json"},
            json={
                "messages": [
                    {"role": "user", "content": user_request},
                ],
                "temperature": 1.2,
                "max_tokens": 1500,
            }
        )

        print(resp.json())
        gpt_response = resp.json()['choices'][0]['message']['content']
        bot.send_message(message.chat.id, gpt_response)







bot.infinity_polling()
